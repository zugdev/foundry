(function() {
    var type_impls = Object.fromEntries([["cast",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-Clone-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cast::backend::JournaledState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-Debug-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cast::backend::JournaledState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-Default-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"cast/revm/context/trait.JournalEntryTr.html\" title=\"trait cast::revm::context::JournalEntryTr\">JournalEntryTr</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cast::backend::JournaledState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, ENTRY&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cast::backend::JournaledState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"cast/revm/context/trait.JournalEntryTr.html\" title=\"trait cast::revm::context::JournalEntryTr\">JournalEntryTr</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;</h4></section></summary><div class=\"docblock\"><p>Creates new <a href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\"><code>JournalInner</code></a>.</p>\n<p><code>warm_preloaded_addresses</code> is used to determine if address is considered warm loaded.\nIn ordinary case this is precompile or beneficiary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_logs\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.take_logs\" class=\"fn\">take_logs</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"cast/revm/primitives/struct.Log.html\" title=\"struct cast::revm::primitives::Log\">Log</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the logs</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_tx\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.commit_tx\" class=\"fn\">commit_tx</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Prepare for next transaction, by committing the current journal to history, incrementing the transaction id\nand returning the logs.</p>\n<p>This function is used to prepare for next transaction. It will save the current journal\nand clear the journal for the next transaction.</p>\n<p><code>commit_tx</code> is used even for discarding transactions so transaction_id will be incremented.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.discard_tx\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.discard_tx\" class=\"fn\">discard_tx</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Discard the current transaction, by reverting the journal entries and incrementing the transaction id.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.finalize\" class=\"fn\">finalize</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"cast/revm/primitives/map/hash_map/struct.HashMap.html\" title=\"struct cast::revm::primitives::map::hash_map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>, <a class=\"struct\" href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a>, <a class=\"struct\" href=\"cast/revm/primitives/map/foldhash/fast/struct.RandomState.html\" title=\"struct cast::revm::primitives::map::foldhash::fast::RandomState\">RandomState</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Take the <a href=\"cast/utils/type.StateChangeset.html\" title=\"type cast::utils::StateChangeset\"><code>EvmState</code></a> and clears the journal by resetting it to initial state.</p>\n<p>Note: Precompile addresses and spec are preserved and initial state of\nwarm_preloaded_addresses will contain precompiles addresses.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.state\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.state\" class=\"fn\">state</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"cast/revm/primitives/map/hash_map/struct.HashMap.html\" title=\"struct cast::revm::primitives::map::hash_map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>, <a class=\"struct\" href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a>, <a class=\"struct\" href=\"cast/revm/primitives/map/foldhash/fast/struct.RandomState.html\" title=\"struct cast::revm::primitives::map::foldhash::fast::RandomState\">RandomState</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return reference to state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_spec_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.set_spec_id\" class=\"fn\">set_spec_id</a>(&amp;mut self, spec: <a class=\"enum\" href=\"cast/revm/primitives/hardfork/enum.SpecId.html\" title=\"enum cast::revm::primitives::hardfork::SpecId\">SpecId</a>)</h4></section></summary><div class=\"docblock\"><p>Sets SpecId.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.touch\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.touch\" class=\"fn\">touch</a>(&amp;mut self, address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>)</h4></section></summary><div class=\"docblock\"><p>Mark account as touched as only touched accounts will be added to state.\nThis is especially important for state clear where touched empty accounts needs to\nbe removed from state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.account\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.account\" class=\"fn\">account</a>(&amp;self, address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>) -&gt; &amp;<a class=\"struct\" href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a></h4></section></summary><div class=\"docblock\"><p>Returns the <em>loaded</em> <a href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a> for the given address.</p>\n<p>This assumes that the account has already been loaded.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the account has not been loaded and is missing from the state set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code_with_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.set_code_with_hash\" class=\"fn\">set_code_with_hash</a>(\n    &amp;mut self,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    code: <a class=\"enum\" href=\"cast/revm/bytecode/enum.Bytecode.html\" title=\"enum cast::revm::bytecode::Bytecode\">Bytecode</a>,\n    hash: <a class=\"struct\" href=\"cast/revm/primitives/struct.FixedBytes.html\" title=\"struct cast::revm::primitives::FixedBytes\">FixedBytes</a>&lt;32&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Set code and its hash to the account.</p>\n<p>Note: Assume account is warm and that hash is calculated from code.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.set_code\" class=\"fn\">set_code</a>(&amp;mut self, address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>, code: <a class=\"enum\" href=\"cast/revm/bytecode/enum.Bytecode.html\" title=\"enum cast::revm::bytecode::Bytecode\">Bytecode</a>)</h4></section></summary><div class=\"docblock\"><p>Use it only if you know that acc is warm.</p>\n<p>Assume account is warm.</p>\n<p>In case of EIP-7702 code with zero address, the bytecode will be erased.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.caller_accounting_journal_entry\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.caller_accounting_journal_entry\" class=\"fn\">caller_accounting_journal_entry</a>(\n    &amp;mut self,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    old_balance: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n    bump_nonce: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Add journal entry for caller accounting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.balance_incr\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.balance_incr\" class=\"fn\">balance_incr</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    balance: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Increments the balance of the account.</p>\n<p>Mark account as touched.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nonce_bump_journal_entry\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.nonce_bump_journal_entry\" class=\"fn\">nonce_bump_journal_entry</a>(&amp;mut self, address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>)</h4></section></summary><div class=\"docblock\"><p>Increments the nonce of the account.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    from: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    to: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    balance: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"cast/revm/context/journaled_state/enum.TransferError.html\" title=\"enum cast::revm::context::journaled_state::TransferError\">TransferError</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Transfers balance from two accounts. Returns error if sender balance is not enough.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_account_checkpoint\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.create_account_checkpoint\" class=\"fn\">create_account_checkpoint</a>(\n    &amp;mut self,\n    caller: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    target_address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    balance: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n    spec_id: <a class=\"enum\" href=\"cast/revm/primitives/hardfork/enum.SpecId.html\" title=\"enum cast::revm::primitives::hardfork::SpecId\">SpecId</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/context/journaled_state/struct.JournalCheckpoint.html\" title=\"struct cast::revm::context::journaled_state::JournalCheckpoint\">JournalCheckpoint</a>, <a class=\"enum\" href=\"cast/revm/context/journaled_state/enum.TransferError.html\" title=\"enum cast::revm::context::journaled_state::TransferError\">TransferError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates account or returns false if collision is detected.</p>\n<p>There are few steps done:</p>\n<ol>\n<li>Make created account warm loaded (AccessList) and this should\nbe done before subroutine checkpoint is created.</li>\n<li>Check if there is collision of newly created account with existing one.</li>\n<li>Mark created account as created.</li>\n<li>Add fund to created account</li>\n<li>Increment nonce of created account if SpuriousDragon is active</li>\n<li>Decrease balance of caller account.</li>\n</ol>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the caller is not loaded inside the EVM state.\nThis should have been done inside <code>create_inner</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checkpoint\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.checkpoint\" class=\"fn\">checkpoint</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"cast/revm/context/journaled_state/struct.JournalCheckpoint.html\" title=\"struct cast::revm::context::journaled_state::JournalCheckpoint\">JournalCheckpoint</a></h4></section></summary><div class=\"docblock\"><p>Makes a checkpoint that in case of Revert can bring back state to this point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checkpoint_commit\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.checkpoint_commit\" class=\"fn\">checkpoint_commit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Commits the checkpoint.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checkpoint_revert\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.checkpoint_revert\" class=\"fn\">checkpoint_revert</a>(&amp;mut self, checkpoint: <a class=\"struct\" href=\"cast/revm/context/journaled_state/struct.JournalCheckpoint.html\" title=\"struct cast::revm::context::journaled_state::JournalCheckpoint\">JournalCheckpoint</a>)</h4></section></summary><div class=\"docblock\"><p>Reverts all changes to state until given checkpoint.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.selfdestruct\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.selfdestruct\" class=\"fn\">selfdestruct</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    target: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.SelfDestructResult.html\" title=\"struct cast::revm::interpreter::SelfDestructResult\">SelfDestructResult</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Performs selfdestruct action.\nTransfers balance from address to target. Check if target exist/is_cold</p>\n<p>Note: Balance will be lost if address and target are the same BUT when\ncurrent spec enables Cancun, this happens only when the account associated to address\nis created in the same tx</p>\n<h5 id=\"references\"><a class=\"doc-anchor\" href=\"#references\">§</a>References:</h5>\n<ul>\n<li><a href=\"https://github.com/ethereum/go-ethereum/blob/141cd425310b503c5678e674a8c3872cf46b7086/core/vm/instructions.go#L832-L833\">https://github.com/ethereum/go-ethereum/blob/141cd425310b503c5678e674a8c3872cf46b7086/core/vm/instructions.go#L832-L833</a></li>\n<li><a href=\"https://github.com/ethereum/go-ethereum/blob/141cd425310b503c5678e674a8c3872cf46b7086/core/state/statedb.go#L449\">https://github.com/ethereum/go-ethereum/blob/141cd425310b503c5678e674a8c3872cf46b7086/core/state/statedb.go#L449</a></li>\n<li><a href=\"https://eips.ethereum.org/EIPS/eip-6780\">https://eips.ethereum.org/EIPS/eip-6780</a></li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_account\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.load_account\" class=\"fn\">load_account</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;&amp;mut <a class=\"struct\" href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Loads account into memory. return if it is cold or warm accessed</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_account_delegated\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.load_account_delegated\" class=\"fn\">load_account_delegated</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;<a class=\"struct\" href=\"cast/revm/context/journaled_state/struct.AccountLoad.html\" title=\"struct cast::revm::context::journaled_state::AccountLoad\">AccountLoad</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Loads account into memory. If account is EIP-7702 type it will additionally\nload delegated account.</p>\n<p>It will mark both this and delegated account as warm loaded.</p>\n<p>Returns information about the account (If it is empty or cold loaded) and if present the information\nabout the delegated account (If it is cold loaded).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_code\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.load_code\" class=\"fn\">load_code</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;&amp;mut <a class=\"struct\" href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Loads account and its code. If account is already loaded it will load its code.</p>\n<p>It will mark account as warm loaded. If not existing Database will be queried for data.</p>\n<p>In case of EIP-7702 delegated account will not be loaded,\n<a href=\"cast/revm/context/struct.JournalInner.html#method.load_account_delegated\" title=\"method cast::revm::context::JournalInner::load_account_delegated\"><code>Self::load_account_delegated</code></a> should be used instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_account_optional\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.load_account_optional\" class=\"fn\">load_account_optional</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    load_code: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    storage_keys: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;&amp;mut <a class=\"struct\" href=\"cast/revm/state/struct.Account.html\" title=\"struct cast::revm::state::Account\">Account</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Loads account. If account is already loaded it will be marked as warm.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sload\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.sload\" class=\"fn\">sload</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    key: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;<a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Loads storage slot.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if the account is not present in the state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sstore\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.sstore\" class=\"fn\">sstore</a>&lt;DB&gt;(\n    &amp;mut self,\n    db: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut DB</a>,\n    address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>,\n    key: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n    new: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.StateLoad.html\" title=\"struct cast::revm::interpreter::StateLoad\">StateLoad</a>&lt;<a class=\"struct\" href=\"cast/revm/interpreter/struct.SStoreResult.html\" title=\"struct cast::revm::interpreter::SStoreResult\">SStoreResult</a>&gt;, &lt;DB as <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>&gt;::<a class=\"associatedtype\" href=\"cast/revm/trait.Database.html#associatedtype.Error\" title=\"type cast::revm::Database::Error\">Error</a>&gt;<div class=\"where\">where\n    DB: <a class=\"trait\" href=\"cast/revm/trait.Database.html\" title=\"trait cast::revm::Database\">Database</a>,</div></h4></section></summary><div class=\"docblock\"><p>Stores storage slot.</p>\n<p>And returns (original,present,new) slot value.</p>\n<p><strong>Note</strong>: Account should already be present in our state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tload\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.tload\" class=\"fn\">tload</a>(&amp;mut self, address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>, key: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;) -&gt; <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;</h4></section></summary><div class=\"docblock\"><p>Read transient storage tied to the account.</p>\n<p>EIP-1153: Transient storage opcodes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tstore\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.tstore\" class=\"fn\">tstore</a>(&amp;mut self, address: <a class=\"struct\" href=\"cast/revm/primitives/struct.Address.html\" title=\"struct cast::revm::primitives::Address\">Address</a>, key: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;, new: <a class=\"struct\" href=\"cast/revm/primitives/alloy_primitives/struct.Uint.html\" title=\"struct cast::revm::primitives::alloy_primitives::Uint\">Uint</a>&lt;256, 4&gt;)</h4></section></summary><div class=\"docblock\"><p>Store transient storage tied to the account.</p>\n<p>If values is different add entry to the journal\nso that old state can be reverted if that action is needed.</p>\n<p>EIP-1153: Transient storage opcodes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.log\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"cast/revm/context/struct.JournalInner.html#tymethod.log\" class=\"fn\">log</a>(&amp;mut self, log: <a class=\"struct\" href=\"cast/revm/primitives/struct.Log.html\" title=\"struct cast::revm::primitives::Log\">Log</a>)</h4></section></summary><div class=\"docblock\"><p>Pushes log into subroutine.</p>\n</div></details></div></details>",0,"cast::backend::JournaledState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cast::backend::JournaledState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cast::backend::JournaledState"],["<section id=\"impl-Eq-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-Eq-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;<div class=\"where\">where\n    ENTRY: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","cast::backend::JournaledState"],["<section id=\"impl-StructuralPartialEq-for-JournalInner%3CENTRY%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-JournalInner%3CENTRY%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ENTRY&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cast/revm/context/struct.JournalInner.html\" title=\"struct cast::revm::context::JournalInner\">JournalInner</a>&lt;ENTRY&gt;</h3></section>","StructuralPartialEq","cast::backend::JournaledState"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[48468]}