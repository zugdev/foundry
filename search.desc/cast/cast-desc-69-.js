searchState.loadedDescShard("cast", 69, "Returns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nInserts a default-constructed value in the entry if it is …\nEnsures a value is in the entry by inserting the default …\nInserts the given default value in the entry if it is …\nEnsures a value is in the entry by inserting the default …\nInserts the result of the <code>call</code> function in the entry if it …\nEnsures a value is in the entry by inserting the result of …\nInserts the result of the <code>call</code> function with a reference …\nEnsures a value is in the entry by inserting, if empty, …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nCreates a <code>fx</code> hasher with a given seed.\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nType alias for …\nA convenience extension trait to enable <code>HashMap::new</code> for …\nType alias for …\nA convenience extension trait to enable <code>HashSet::new</code> for …\nA random seed intended to be shared by many different …\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nThe foldhash implementation optimized for speed.\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nGenerates a new <code>SharedSeed</code> from a single 64-bit seed.\nReturns the globally shared fixed <code>SharedSeed</code> as used by …\nReturns the globally shared randomly initialized <code>SharedSeed</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nCreates an empty <code>HashMap</code>.\nCreates an empty <code>HashSet</code>.\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nThe foldhash implementation optimized for quality.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nCreates an empty <code>HashMap</code> with at least the specified …\nCreates an empty <code>HashSet</code> with at least the specified …\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nA <code>BuildHasher</code> for <code>fast::FoldHasher</code> that always has the …\nA <code>Hasher</code> instance implementing foldhash, optimized for …\nA <code>BuildHasher</code> for <code>fast::FoldHasher</code> that is randomly …\nA <code>BuildHasher</code> for <code>fast::FoldHasher</code> that is randomly …\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nGenerates a fixed <code>SeedableRandomState</code>, similar to …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nGenerates a random <code>SeedableRandomState</code>, similar to …\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nInitializes this <code>FoldHasher</code> with the given per-hasher seed …\nGenerates a <code>SeedableRandomState</code> with the given per-hasher …\nCreates a <code>FixedState</code> with the given per-hasher-seed.\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nA <code>BuildHasher</code> for <code>quality::FoldHasher</code> that always has the …\nA <code>Hasher</code> instance implementing foldhash, optimized for …\nA <code>BuildHasher</code> for <code>quality::FoldHasher</code> that is randomly …\nA <code>BuildHasher</code> for <code>quality::FoldHasher</code> that is randomly …\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nGenerates a fixed <code>SeedableRandomState</code>, similar to …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Primary</code>].\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nGenerates a random <code>SeedableRandomState</code>, similar to …\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nInitializes this <code>FoldHasher</code> with the given per-hasher seed …\nGenerates a <code>SeedableRandomState</code> with the given per-hasher …\nCreates a <code>FixedState</code> with the given per-hasher seed.\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nThe default <code>Hasher</code> used by <code>RandomState</code>.\nA draining iterator over the entries of a <code>HashMap</code>.\nA view into a single entry in a map, which may either be …\nA draining, filtering iterator over the entries of a …\nA hash map implemented with quadratic probing and SIMD …\nAn owning iterator over the entries of a <code>HashMap</code>.\nAn owning iterator over the keys of a <code>HashMap</code>.\nAn owning iterator over the values of a <code>HashMap</code>.\nAn iterator over the entries of a <code>HashMap</code>.\nA mutable iterator over the entries of a <code>HashMap</code>.\nAn iterator over the keys of a <code>HashMap</code>.\nAn occupied entry.\nA view into an occupied entry in a <code>HashMap</code>. It is part of …\nThe error returned by <code>try_insert</code> when the key already …\n<code>RandomState</code> is the default state for <code>HashMap</code> types.\nA vacant entry.\nA view into a vacant entry in a <code>HashMap</code>. It is part of the …\nAn iterator over the values of a <code>HashMap</code>.\nA mutable iterator over the values of a <code>HashMap</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Blink</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Bold</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Bright</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns the number of elements the map can hold without …\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nClears the map, removing all key-value pairs. Keeps the …\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Clear</code>].\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Conceal</code>].\nReturns <code>true</code> if the map contains a value for the specified …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Cyan</code>].\nCreates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …\nConstructs a new <code>RandomState</code>.\nCreates a new <code>DefaultHasher</code> using <code>new</code>. See its …\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Dim</code>].\nClears the map, returning all key-value pairs as an …\nGets the given key’s corresponding entry in the map for …\nThe entry in the map that was already occupied.\nCreates an iterator which uses a closure to determine if …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Fixed</code>].\nReturns the argument unchanged.\nConverts a <code>[(K, V); N]</code> into a <code>HashMap&lt;K, V&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>HashMap&lt;K, V&gt;</code> from an iterator of key-value …\nReturns a reference to the value corresponding to the key.\nGets a reference to the value in the entry.\nAttempts to get mutable references to <code>N</code> values in the map …\nAttempts to get mutable references to <code>N</code> values in the map …\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nGets a mutable reference to the value in the entry.\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Green</code>].\nReturns a reference to the map’s <code>BuildHasher</code>.\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves each …\nTake ownership of the key.\nCreates a consuming iterator visiting all the keys in …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nCreates a consuming iterator visiting all the values in …\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Invert</code>].\nReturns <code>true</code> if the map contains no elements.\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Italic</code>].\nAn iterator visiting all key-value pairs in arbitrary …\nAn iterator visiting all key-value pairs in arbitrary …\nGets a reference to the key in the entry.\nGets a reference to the key that would be used when …\nAn iterator visiting all keys in arbitrary order. The …\nReturns the number of elements in the map.\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Linger</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Mask</code>].\nCreates an empty <code>HashMap</code>.\nConstructs a new <code>RandomState</code> that is initialized with …\nCreates a new <code>DefaultHasher</code>.\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Black</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Blue</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: OnBright</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlack</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightBlue</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightCyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightGreen</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightMagenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightRed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightWhite</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: BrightYellow</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Cyan</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Fixed</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Green</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Magenta</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Primary</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].\nReturns <code>self</code> with the <code>bg()</code> set to [<code>Color :: Red</code>].")